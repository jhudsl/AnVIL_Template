[["index.html", "AnVIL Book Name About this Book Skills Level AnVIL Collection", " AnVIL Book Name September 15, 2025 About this Book This book is part of a series of books for the Genomic Data Science Analysis, Visualization, and Informatics Lab-space (AnVIL) of the National Human Genome Research Institute (NHGRI). Learn more about AnVIL by visiting https://anvilproject.org or reading the article in Cell Genomics. Skills Level Genetics Programming skills AnVIL Collection Please check out our full collection of AnVIL and related resources: https://hutchdatascience.org/AnVIL_Collection/ "],["learning-objectives.html", "Learning Objectives", " Learning Objectives "],["introduction.html", "Chapter 1 Introduction 1.1 Motivation 1.2 Target Audience 1.3 Curriculum", " Chapter 1 Introduction 1.1 Motivation 1.2 Target Audience The course is intended for … 1.3 Curriculum The course covers… "],["a-new-chapter.html", "Chapter 2 A new chapter 2.1 Learning Objectives 2.2 Libraries 2.3 Subtopic 2.4 Print out session info", " Chapter 2 A new chapter *If you haven’t yet read the getting started Wiki pages; start there Every chapter needs to start out with this chunk of code: 2.1 Learning Objectives *Every chapter also needs Learning objectives that will look like this: This chapter will cover: {You can use https://tips.uark.edu/using-blooms-taxonomy/ to define some learning objectives here} {Another learning objective} 2.2 Libraries For this chapter, we’ll need the following packages attached: *Remember to add any additional packages you need to your course’s own docker image. library(magrittr) 2.3 Subtopic Here’s a subheading and some text in this subsection! 2.3.1 Code examples You can demonstrate code like this: output_dir &lt;- file.path(&quot;resources&quot;, &quot;code_output&quot;) if (!dir.exists(output_dir)) { dir.create(output_dir) } And make plots too: hist_plot &lt;- hist(iris$Sepal.Length) You can also save these plots to file: png(file.path(output_dir, &quot;test_plot.png&quot;)) hist_plot ## $breaks ## [1] 4.0 4.5 5.0 5.5 6.0 6.5 7.0 7.5 8.0 ## ## $counts ## [1] 5 27 27 30 31 18 6 6 ## ## $density ## [1] 0.06666667 0.36000000 0.36000000 0.40000000 0.41333333 0.24000000 0.08000000 ## [8] 0.08000000 ## ## $mids ## [1] 4.25 4.75 5.25 5.75 6.25 6.75 7.25 7.75 ## ## $xname ## [1] &quot;iris$Sepal.Length&quot; ## ## $equidist ## [1] TRUE ## ## attr(,&quot;class&quot;) ## [1] &quot;histogram&quot; dev.off() ## png ## 2 2.3.2 Image example How to include a Google slide. It’s simplest to use the ottrpal package: But if you have the slide or some other image locally downloaded you can also use html like this: 2.3.3 Video examples To show videos in your course, you can use markdown syntax like this: A video we want to show Alternatively, you can use knitr::include_url() like this: Note that we are using echo=FALSE in the code chunk because we don’t want the code part of this to show up. If you are unfamiliar with how R Markdown code chunks work, read this. OR this works: 2.3.4 Links to files This works: Or this: This works. Or this: 2.3.5 Links to websites Examples of including a website link. This works: OR this: Another link OR this: 2.3.6 Citation examples We can put citations at the end of a sentence like this (Allaire et al. 2021). Or multiple citations Xie, Allaire, and Grolemund (2018). but they need a ; separator (Allaire et al. 2021; Xie, Allaire, and Grolemund 2018). In text, we can put citations like this Allaire et al. (2021). 2.3.7 Callout boxes There are some preset callout boxes available, which can be used like so: notice: Here’s something interesting. warning: Look out! dictionary: Here’s a definition. reflection: Consider this! github: Here’s how you use GitHub. wip: This section is a Work in Progress. 2.3.8 Dropdown summaries You can hide additional information in a dropdown menu Here’s more words that are hidden. 2.4 Print out session info You should print out session info when you have code for reproducibility purposes. devtools::session_info() ## ─ Session info ─────────────────────────────────────────────────────────────── ## setting value ## version R version 4.3.2 (2023-10-31) ## os Ubuntu 22.04.4 LTS ## system x86_64, linux-gnu ## ui X11 ## language (EN) ## collate en_US.UTF-8 ## ctype en_US.UTF-8 ## tz Etc/UTC ## date 2025-09-15 ## pandoc 3.1.1 @ /usr/local/bin/ (via rmarkdown) ## ## ─ Packages ─────────────────────────────────────────────────────────────────── ## package * version date (UTC) lib source ## bookdown 0.43 2025-04-15 [1] CRAN (R 4.3.2) ## bslib 0.6.1 2023-11-28 [1] RSPM (R 4.3.0) ## cachem 1.0.8 2023-05-01 [1] RSPM (R 4.3.0) ## chromote 0.5.1 2025-04-24 [1] CRAN (R 4.3.2) ## cli 3.6.2 2023-12-11 [1] RSPM (R 4.3.0) ## devtools 2.4.5 2022-10-11 [1] RSPM (R 4.3.0) ## digest 0.6.34 2024-01-11 [1] RSPM (R 4.3.0) ## dplyr 1.1.4 2023-11-17 [1] RSPM (R 4.3.0) ## ellipsis 0.3.2 2021-04-29 [1] RSPM (R 4.3.0) ## evaluate 1.0.4 2025-06-18 [1] CRAN (R 4.3.2) ## fansi 1.0.6 2023-12-08 [1] RSPM (R 4.3.0) ## fastmap 1.1.1 2023-02-24 [1] RSPM (R 4.3.0) ## fs 1.6.3 2023-07-20 [1] RSPM (R 4.3.0) ## generics 0.1.3 2022-07-05 [1] RSPM (R 4.3.0) ## gitcreds 0.1.2 2022-09-08 [1] RSPM (R 4.3.0) ## glue 1.7.0 2024-01-09 [1] RSPM (R 4.3.0) ## hms 1.1.3 2023-03-21 [1] RSPM (R 4.3.0) ## htmltools 0.5.7 2023-11-03 [1] RSPM (R 4.3.0) ## htmlwidgets 1.6.4 2023-12-06 [1] RSPM (R 4.3.0) ## httpuv 1.6.14 2024-01-26 [1] RSPM (R 4.3.0) ## httr 1.4.7 2023-08-15 [1] RSPM (R 4.3.0) ## jquerylib 0.1.4 2021-04-26 [1] RSPM (R 4.3.0) ## jsonlite 1.8.8 2023-12-04 [1] RSPM (R 4.3.0) ## knitr 1.50 2025-03-16 [1] CRAN (R 4.3.2) ## later 1.3.2 2023-12-06 [1] RSPM (R 4.3.0) ## lifecycle 1.0.4 2023-11-07 [1] RSPM (R 4.3.0) ## magrittr * 2.0.3 2022-03-30 [1] RSPM (R 4.3.0) ## memoise 2.0.1 2021-11-26 [1] RSPM (R 4.3.0) ## mime 0.12 2021-09-28 [1] RSPM (R 4.3.0) ## miniUI 0.1.1.1 2018-05-18 [1] RSPM (R 4.3.0) ## ottrpal 2.0.0 2025-08-11 [1] Github (ottrproject/ottrpal@a9049b7) ## pillar 1.9.0 2023-03-22 [1] RSPM (R 4.3.0) ## pkgbuild 1.4.3 2023-12-10 [1] RSPM (R 4.3.0) ## pkgconfig 2.0.3 2019-09-22 [1] RSPM (R 4.3.0) ## pkgload 1.3.4 2024-01-16 [1] RSPM (R 4.3.0) ## png 0.1-8 2022-11-29 [1] CRAN (R 4.3.2) ## processx 3.8.3 2023-12-10 [1] RSPM (R 4.3.0) ## profvis 0.3.8 2023-05-02 [1] RSPM (R 4.3.0) ## promises 1.2.1 2023-08-10 [1] RSPM (R 4.3.0) ## ps 1.7.6 2024-01-18 [1] RSPM (R 4.3.0) ## purrr 1.0.2 2023-08-10 [1] RSPM (R 4.3.0) ## R6 2.5.1 2021-08-19 [1] RSPM (R 4.3.0) ## Rcpp 1.0.12 2024-01-09 [1] RSPM (R 4.3.0) ## readr 2.1.5 2024-01-10 [1] RSPM (R 4.3.0) ## remotes 2.4.2.1 2023-07-18 [1] RSPM (R 4.3.0) ## rlang 1.1.6 2025-04-11 [1] CRAN (R 4.3.2) ## rmarkdown 2.25 2023-09-18 [1] RSPM (R 4.3.0) ## rprojroot 2.1.0 2025-07-12 [1] CRAN (R 4.3.2) ## rvest 1.0.4 2024-02-12 [1] CRAN (R 4.3.2) ## sass 0.4.8 2023-12-06 [1] RSPM (R 4.3.0) ## sessioninfo 1.2.2 2021-12-06 [1] RSPM (R 4.3.0) ## shiny 1.8.0 2023-11-17 [1] RSPM (R 4.3.0) ## spelling 2.3.1 2024-10-04 [1] CRAN (R 4.3.2) ## stringi 1.8.3 2023-12-11 [1] RSPM (R 4.3.0) ## stringr 1.5.1 2023-11-14 [1] RSPM (R 4.3.0) ## tibble 3.3.0 2025-06-08 [1] CRAN (R 4.3.2) ## tidyr 1.3.1 2024-01-24 [1] RSPM (R 4.3.0) ## tidyselect 1.2.0 2022-10-10 [1] RSPM (R 4.3.0) ## tzdb 0.4.0 2023-05-12 [1] RSPM (R 4.3.0) ## urlchecker 1.0.1 2021-11-30 [1] RSPM (R 4.3.0) ## usethis 2.2.3 2024-02-19 [1] RSPM (R 4.3.0) ## utf8 1.2.4 2023-10-22 [1] RSPM (R 4.3.0) ## vctrs 0.6.5 2023-12-01 [1] RSPM (R 4.3.0) ## webshot2 0.1.2 2025-04-23 [1] CRAN (R 4.3.2) ## websocket 1.4.4 2025-04-10 [1] CRAN (R 4.3.2) ## xfun 0.52 2025-04-02 [1] CRAN (R 4.3.2) ## xml2 1.3.6 2023-12-04 [1] RSPM (R 4.3.0) ## xtable 1.8-4 2019-04-21 [1] RSPM (R 4.3.0) ## yaml 2.3.10 2024-07-26 [1] CRAN (R 4.3.2) ## ## [1] /usr/local/lib/R/site-library ## [2] /usr/local/lib/R/library ## ## ────────────────────────────────────────────────────────────────────────────── References "],["anvil-module-library.html", "Chapter 3 AnVIL Module Library 3.1 Include using cow::borrow_chapter() 3.2 Background Highlighting for Borrowed Chapters", " Chapter 3 AnVIL Module Library There are several pieces of content that are useful across multiple books, such as “How to Create a Workspace”. To reduce maintenance burden, the AnVIL_Template repository has a collection of _child R Markdown documents that can be included in your books. You can see all the available AnVIL modules in the AnVIL_Template book 3.1 Include using cow::borrow_chapter() To add a module to your book, include a code chunk with the cow::borrow_chapter() function, specifying the file for the module you want to borrow and the repository you want to borrow it from (the AnVIL_Template repository). See the OTTR_Template wiki page for the most recent instructions and additional details. Here is an example of including the _child_workspace_create.Rmd with cow::borrow_chapter() Launch Terra In the drop-down menu on the left, navigate to “Workspaces”. Click the triple bar in the top left corner to access the menu. Click “Workspaces”. Click on the plus icon near the top of left of the page. Name your Workspace and select the appropriate Billing Project. All activity in the Workspace will be charged to this Billing Project (regardless of who conducted it). If you are working with protected data, you can set the Authorization Domain to limit who can be added to your Workspace. Note that the Authorization Domain cannot be changed after the Workspace is created (i.e. there is no way to make this Workspace shareable with a larger audience in the future). Workspaces by default are only visible to people you specifically share them with. Authorization domains add an extra layer of enforcement over privacy, but by nature make sharing more complicated. We recommend using Authorization Domains in cases where it is extremely important and/or legally required that the data be kept private (e.g. protected patient data, industry data). For data you would merely prefer not be shared with the world, we recommend relying on standard Workspace sharing permissions rather than Authorization Domains, as Authorization Domains can make future collaborations, publications, or other sharing complicated. Click “CREATE WORKSPACE”. The new Workspace should now show up under your Workspaces. 3.2 Background Highlighting for Borrowed Chapters You can use the borrowed_chunk custom div block to highlight borrowed content or any other content you choose. Basic format: :::: {.borrowed_chunk} Code/Content here :::: Rendered with highlighting: If you do not already have a Google account that you would like to use for accessing Terra, create one now. If you would like to create a Google account that is associated with your non-Gmail, institutional email address, follow these instructions. Rendered without highlighting: If you do not already have a Google account that you would like to use for accessing Terra, create one now. If you would like to create a Google account that is associated with your non-Gmail, institutional email address, follow these instructions. "],["student-guide.html", "Chapter 4 Student Guide 4.1 Activity One 4.2 Activity Two", " Chapter 4 Student Guide 4.1 Activity One Many of the AnVIL books that are designed for teaching a class or workshop contain information aimed at the instructor. You might want to create a “student guide” that contains a different subset of Rmd files from your book, or renders to a different output format (e.g. word document). You can specify the output and Rmd files that will be used for the student guide using the _output.yml and _bookdown.yml files in the student-guide directory. By default, repositories based on AnVIL_Template create a docx file containing this chapter as an example. Once you have adjusted student-guide/bookdown.yml to include the chapters you want in your student guide, you can link to it by replacing {repo-name} in the following URL: https://github.com/jhudsl/{repo-name}/raw/main/student-guide/docs/Student_Guide.docx When someone clicks this link, they will download the docx file. For example, here is the link for the student guide from AnVIL_Template: https://github.com/jhudsl/AnVIL_Template/raw/main/student-guide/docs/Student_Guide.docx 4.2 Activity Two Steps of the guide could go here. "],["workspaces.html", "Chapter 5 Workspaces 5.1 Clone a Workspace 5.2 Create a Workspace 5.3 Open a Workspace 5.4 Share a Workspace", " Chapter 5 Workspaces Modules about Terra Workspaces 5.1 Clone a Workspace Launch Terra Locate the Workspace you want to clone. If a Workspace has been shared with you ahead of time, it will appear in “MY WORKSPACES”. You can clone a Workspace that was shared with you to perform your own analyses. In the screenshot below, no Workspaces have been shared. If a Workspace hasn’t been shared with you, navigate to the “FEATURED” or “PUBLIC” Workspace tabs. Use the search box to find the Workspace you want to clone. Click the teardrop button on the far right next to the Workspace you want to clone. Click “Clone”. You can also clone the Workspace from the Workspace Dashboard instead of the search results. You will see a popup box appear. Name your Workspace and select the appropriate Terra Billing Project. All activity in the Workspace will be charged to this Billing Project (regardless of who conducted it). Remember that each Workspace should have its own Billing Project. If you are working with protected data, you can set the Authorization Domain to limit who can be added to your Workspace. Note that the Authorization Domain cannot be changed after the Workspace is created (i.e. there is no way to make this Workspace shareable with a larger audience in the future). Workspaces by default are only visible to people you specifically share them with. Authorization domains add an extra layer of enforcement over privacy, but by nature make sharing more complicated. We recommend using Authorization Domains in cases where it is extremely important and/or legally required that the data be kept private (e.g. protected patient data, industry data). For data you would merely prefer not be shared with the world, we recommend relying on standard Workspace sharing permissions rather than Authorization Domains, as Authorization Domains can make future collaborations, publications, or other sharing complicated. Click “CLONE WORKSPACE”. The new Workspace should now show up under your Workspaces. 5.2 Create a Workspace Launch Terra In the drop-down menu on the left, navigate to “Workspaces”. Click the triple bar in the top left corner to access the menu. Click “Workspaces”. Click on the plus icon near the top of left of the page. Name your Workspace and select the appropriate Billing Project. All activity in the Workspace will be charged to this Billing Project (regardless of who conducted it). If you are working with protected data, you can set the Authorization Domain to limit who can be added to your Workspace. Note that the Authorization Domain cannot be changed after the Workspace is created (i.e. there is no way to make this Workspace shareable with a larger audience in the future). Workspaces by default are only visible to people you specifically share them with. Authorization domains add an extra layer of enforcement over privacy, but by nature make sharing more complicated. We recommend using Authorization Domains in cases where it is extremely important and/or legally required that the data be kept private (e.g. protected patient data, industry data). For data you would merely prefer not be shared with the world, we recommend relying on standard Workspace sharing permissions rather than Authorization Domains, as Authorization Domains can make future collaborations, publications, or other sharing complicated. Click “CREATE WORKSPACE”. The new Workspace should now show up under your Workspaces. 5.3 Open a Workspace Launch Terra In the drop-down menu on the left, navigate to “Workspaces”. Click the triple bar in the top left corner to access the menu. Click “Workspaces”. You are automatically directed to the “My Workspaces” tab. Here you can see any Workspaces that have been shared with you, along with your permission level. Reader means you can open the Workspace and see everything, but can’t do any computations or make any edits. Writer means you can run computations, which will charge costs to the Workspace’s Billing Project. Writers can also make edits to the Workspace. Owner is similar to Writer, but also allows you to control who can access the Workspace. Click on the name of a Workspace to open it. Opening and viewing a Workspace does not cost anything. When you open a Workspace, you are directed to the Workspace Dashboard. This generally has a description of the Workspace contents, as well as some useful details about the Workspace itself. From here you can navigate through the different tabs of the Workspace, and if you have sufficient permission, you can start running analyses. If you are only a Reader, you may need to “clone” (make your own copy) of the Workspace before you can start working. 5.4 Share a Workspace Launch Terra In the drop-down menu on the left, navigate to “Workspaces”. Click the triple bar in the top left corner to access the menu. Click “Workspaces”. Click on the name of the Workspace to open the Workspace. Opening a Workspace does not cost anything. Certain activities in the Workspace (such as running an analysis) will charge to the Workspace’s Billing Project. Workspace management (e.g. adding and removing members, editing the description) does not cost money. Click the teardrop button () on the right hand side to open the Workspace management menu. Click “Share” Enter the email address of the user or Group you’d like to share the Workspace with. If adding an individual, make sure to enter the account that they use to access AnVIL. If adding a Terra Group, use the Group email address, which can be found on the Terra Group management page. Choose their permission level. Remember that all activity in the Workspace will be charged to the Workspace’s Billing Project, regardless of who conducts it, so only add members as “Writers” or “Owners” if they should be charging to the Workspace’s Billing Project. “Readers” can view all parts of the Workspace but cannot make edits or run analyses (i.e. they cannot spend money). They can also clone their own copy of the Workspace where they can conduct activity on their own Billing Project. Click “Save”. The user should now be able to see the Workspace when logged in to Terra. "],["billing.html", "Chapter 6 Billing 6.1 Create Google Billing Account 6.2 Add Terra to Google Billing Account 6.3 Add Members to Google Billing Account 6.4 Set Alerts for Google Billing 6.5 View Spend for Google Billing 6.6 Create Terra Billing Project 6.7 Add Member to Terra Billing Project 6.8 Disable Terra Billing Project", " Chapter 6 Billing Modules about billing and Billing Projects on Google Cloud Platform and Terra. 6.1 Create Google Billing Account Log in to the Google Cloud Platform console using your Google ID. Make sure to use the same Google account ID you use to log into Terra. If you are a first time user, don’t forget to claim your free credits! If you haven’t been to the console before, once you accept the Terms of Service you will be greeted with an invitation to “Try for Free.” Follow the instructions to sign up for a Billing Account and get your credits. Choose “Individual Account”. This “billing account” is just for managing billing, so you don’t need to be able to add your team members. You will need to give either a credit card or bank account for security. Don’t worry! You won’t be billed until you explicitly turn on automatic billing. You can view and edit your new Billing Account, by selecting “Billing” from the left-hand menu, or going directly to the billing console console.cloud.google.com/billing Clicking on the Billing Account name will allow you to manage the account, including accessing reports, setting alerts, and managing payments and billing. At any point, you can create additional Billing Accounts using the Create Account button. We generally recommend creating a new Billing Account for each funding source. 6.2 Add Terra to Google Billing Account This gives Terra permission to create projects and send charges to the Google Billing Account, and must be done by an administrator of the Google Billing Account. Terra needs to be added as a “Billing Account User”: Log in to the Google Cloud Platform console using your Google ID. Navigate to Billing You may be automatically directed to view a specific Billing Account. If you see information about a single account rather than a list of your Billing Accounts, you can get back to the list by clicking “Manage Billing Accounts” from the drop-down menu. Check the box next to the Billing Account you wish to add Terra to, click “ADD MEMBER”. Enter terra-billing@terra.bio in the text box. In the drop-down menu, mouse over Billing, then choose “Billing Account User”. Click “SAVE”. 6.3 Add Members to Google Billing Account Anyone you wish to add to the Billing Account will need their own Google ID. To add a member to a Billing Project: Log in to the Google Cloud Platform console using your Google ID. Navigate to Billing You may be automatically directed to view a specific Billing Account. If you see information about a single account rather than a list of your Billing Accounts, you can get back to the list by clicking “Manage Billing Accounts” from the drop-down menu. Check the box next to the Billing Account you wish to add a member to, click “ADD MEMBER”. Enter their Google ID in the text box. In the drop-down menu, mouse over Billing, then choose the appropriate role. Click “SAVE”. 6.4 Set Alerts for Google Billing Log in to the Google Cloud Platform console using the Google ID associated with your Google Cloud projects. Open the dropdown menu on the top left and click on Billing. You may be automatically directed to view a specific Billing Account. If you see information about a single account (and it’s not the one you’re interested in), you can get back to the list of all your Billing Accounts by clicking “Manage Billing Accounts” from the drop-down menu. Click on the name of the Billing Account you want to set alerts for. In the left-hand menu, click “Budgets &amp; alerts”. Click the “Create Budget” tab. Enter a name for your budget, and then choose which projects you want to monitor. Then click “Next”. For Budget Type, select “Specified amount”. Enter the total budget amount for the month (you will set alerts at different thresholds in the next step). Click “Next” (do not click “Finish”). Enter the threshold amounts where you want to receive an alert. We recommend starting with 50% and 90%. You can set other alerts if you prefer. Check the box for “Email alerts to billing admins and users”, then click “Finish”. Now you (as the owner and admin), along with anyone you added with admin or user privileges (e.g. lab managers) will receive alerts when your lab members reach the specified spending thresholds. These emails will be sent to the Gmail accounts associated with the Billing Account. You can edit your budgets at any time by going to Billing &gt; Budgets &amp; alerts, and clicking on the name of the budget you want to edit. 6.5 View Spend for Google Billing You can always check your current spend through the Google Billing console, but remember There is a reporting delay (~1 day), so you cannot immediately see what an analysis cost Costs are reported at the level of Workspaces, so if there are multiple people using a Workspace, you will not be able to determine which of them was responsible for the charges. The Google Billing console displays information by Billing Account. To view spending: Log in to the Google Cloud Platform console using the Google ID associated with your Google Cloud projects. Open the dropdown menu on the top left and click on Billing. You may be automatically directed to view a specific Billing Account. If you see information about a single account (and it’s not the one you’re interested in), you can get back to the list of all your Billing Accounts by clicking “Manage Billing Accounts” from the drop-down menu. Click on the name of the Billing Account for the project you want to view. Look at the top of the Overview tab to see your month-to-date spending. Scroll further down the Overview tab to show your top projects. Click on the Reports tab to see more detailed information about each of your projects. This is probably the most useful tab for exploring costs of individual projects over time. Click on the Cost table tab to obtain a convenient table of spending per project. 6.6 Create Terra Billing Project Launch Terra and sign in with your Google account. If this is your first time logging in to Terra, you will need to accept the Terms of Service. In the drop-down menu on the left, navigate to “Billing”. Click the triple bar in the top left corner to access the menu. Click the arrow next to your name to expand the menu, then click “Billing”. You can also navigate there directly with this link: https://anvil.terra.bio/#billing On the Billing page, click the “+ CREATE” button to create a new Billing Project. Select GCP Billing Project (Google’s Platform). If prompted, select the Google account to use and give Terra permission to manage Google Cloud Platform billing accounts. Enter a unique name for your Terra Billing Project and select the appropriate Google Billing Account. The name of the Terra Billing Project must: Only contain lowercase letters, numbers and hyphens Start with a lowercase letter Not end with a hyphen Be between 6 and 30 characters Select the Google Billing Account to use. All activities conducted under your new Terra Billing Project will charge to this Google Billing Account. If prompted, give Terra permission to manage Google Cloud Platform billing accounts. Click “Create”. Your new Billing Project should now show up in the list of Billing Projects Owned by You. You can add additional members or can modify or deactivate the Billing Project at any time by clicking on its name in this list. The page doesn’t always update as soon as the Billing Project is created. If it’s been a couple of minutes and you don’t see a change, try refreshing the page. 6.7 Add Member to Terra Billing Project Launch Terra and sign in with your Google account. In the drop-down menu on the left, navigate to “Billing”. Click the triple bar in the top left corner to access the menu. Click the arrow next to your name to expand the menu, then click “Billing”. You can also navigate there directly with this link: https://anvil.terra.bio/#billing Click “Owned by You” and find the Billing Project. If you do not see the Billing Project in this list, then you are not an Owner and do not have permission to add members. Click on the name of the Billing Project. Click on the “Members” tab to view and manage members. Then click the “Add User” button. Enter the email address of the user or group you’d like to add the the Billing Project. If adding an individual, make sure to enter the account that they use to access AnVIL. If adding a Terra Group, use the Group email address, which can be found on the Terra Group management page. If this user or group will need to add and remove other users of the Billing Project, check the Owner box. Otherwise leave it unchecked. It’s often a good idea to have at least one other Owner of a Billing Project in order to avoid getting locked out, in case the original owner leaves or loses access to their account. Click “ADD USER”. You should now see the user or group listed in the Billing Project members, along with the appropriate role. They should now be able to use the Billing Project to fund work on AnVIL. If you need to remove members or modify their roles, you can do so at any time by clicking the teardrop button next to their name. 6.8 Disable Terra Billing Project By default this module includes a warning to make sure people understand they will lose access to their Workspace buckets. You can remove the warning from this module by setting AnVIL_module_settings$warning to FALSE before running cow::borrow_chapter: AnVIL_module_settings &lt;- list( warning = FALSE ) cow::borrow_chapter( doc_path = &quot;child/_child_terra_billing_project_disable.Rmd&quot;, repo_name = &quot;jhudsl/AnVIL_Template&quot; ) Disabling a Billing Project makes Workspace contents inaccessible! Disabling a Billing Project disables funding to all Workspaces funded by the Billing Project. You will be unable to compute in these Workspaces, and you will lose access to any data stored in the Workspace buckets. It is sometimes possible to restore access by reactivating billing, but Google makes no promises about whether or how long the data will be recoverable. Make sure everyone with Workspaces funded by the Billing Project has saved anything they want to keep in another location before disabling the Billing Project. To disable a Terra Billing Project (i.e. remove the Google Billing Account that funds the Terra Billing Project): Launch Terra and sign in with your Google account. In the drop-down menu on the left, navigate to “Billing”. Click the triple bar in the top left corner to access the menu. Click the arrow next to your name to expand the menu, then click “Billing”. You can also navigate there directly with this link: https://anvil.terra.bio/#billing Click “Owned by You” and find the Billing Project. If you do not see the Billing Project in this list, then you are not an Owner and do not have permission to add members. Click on the name of the Billing Project. If you don’t see information about the Billing Account, click on “View billing account” to expand the Billing Account information. You may be prompted to enter your login information again. You should see the name of the Google Billing Account that is funding this Terra Billing Project. Click on the teardrop icon next to the name of the Billing Account. Click “Remove Billing Account”. Click OK to confirm that you want to disable funding for this Billing Project. The page should now indicate that there is no linked billing account. If necessary, you can restore funding to the Billing Project and associated Workspaces by clicking the teardrop icon and selecting “Change Billing Account”. However, Google makes no promises about how long the Workspace contents will remain available after you disable funding, so it is best not to rely on them. "],["onboarding.html", "Chapter 7 Onboarding 7.1 Create Google Account", " Chapter 7 Onboarding Joining a team on AnVIL. 7.1 Create Google Account If you do not already have a Google account that you would like to use for accessing Terra, create one now. If you would like to create a Google account that is associated with your non-Gmail, institutional email address, follow these instructions. "],["using-programming-platforms-on-anvil.html", "Chapter 8 Using programming platforms on AnVIL 8.1 Video overview on using Jupyter Notebooks 8.2 Launching Jupyter 8.3 Video overview on using Galaxy 8.4 Starting Galaxy 8.5 Navigating Galaxy 8.6 Deleting Galaxy 8.7 Video overview on using RStudio 8.8 Launching RStudio 8.9 Touring RStudio 8.10 Pausing RStudio 8.11 Deleting RStudio 8.12 Pausing vs. Deleting cloud environments", " Chapter 8 Using programming platforms on AnVIL Modules about opening, touring, and closing AnVIL platforms 8.1 Video overview on using Jupyter Notebooks Here is a video tutorial that describes the basics of using Jupyter Notebook on AnVIL. 8.1.1 Objectives Start compute for your Jupyter environment Create notebook to perform analysis Stop compute to minimize expenses 8.1.2 Slides The slides for this tutorial are are located here. 8.2 Launching Jupyter AnVIL is very versatile and can scale up to use very powerful cloud computers. It’s very important that you select a cloud computing environment appropriate to your needs to avoid runaway costs. If you are uncertain, start with the default settings; it is fairly easy to increase your compute resources later, if needed, but harder to scale down. Note that, in order to use Jupyter, you must have access to a Terra Workspace with permission to compute (i.e. you must be a Writer or Owner of the Workspace). If you created or cloned the Workspace yourself, you are good to go! If you are using someone else’s Workspace, the Workspace Owner(s) can grant you appropriate permissions, if they haven’t already. Open Terra - use a web browser to go to anvil.terra.bio In the drop-down menu on the left, navigate to “Workspaces”. Click the triple bar in the top left corner to access the menu. Click “Workspaces”. Click on the name of your Workspace. You should be routed to a link that looks like: https://anvil.terra.bio/#workspaces/&lt;billing-project&gt;/&lt;workspace-name&gt; Click on the cloud icon on the far right to access your Cloud Environment options. If you don’t see this icon, you may need to scroll to the right. In the dialogue box, click the “Settings” button under Jupyter. You will see some configuration options for the Jupyter cloud environment, and a list of costs because it costs a small amount of money to use cloud computing. Configure any settings you need for your cloud environment. If you are uncertain about what you need, the default configuration is a reasonable, cost-conservative choice. It is fairly easy to increase your compute resources later, if needed, but harder to scale down. Scroll down and click the “CREATE” button when you are satisfied with your setup. The dialogue box will close and you will be returned to your Workspace. You can see the status of your cloud environment by hovering over the Jupyter icon. It will take a few minutes for Terra to request computers and install software. When your environment is ready, its status will change to “Running”. Click on the “ANALYSES” tab to create or open a Jupyter Notebook. From the ANALYSES tab, you can click on the name of an existing Jupyter Notebook to view and launch it, or click the “START” button to create a new Notebook. Clicking on a Notebook name will open a static preview of the Notebook. To edit and run the Notebook, click the “OPEN” button. 8.3 Video overview on using Galaxy Here is a video tutorial that describes the basics of using Galaxy on AnVIL. 8.3.1 Objectives Start compute for your Galaxy on AnVIL Run tool to quality control sequencing reads Stop compute to minimize expenses 8.3.2 Slides The slides for this tutorial are are located here. 8.4 Starting Galaxy Note that, in order to use Galaxy, you must have access to a Terra Workspace with permission to compute (i.e. you must be a “Writer” or “Owner” of the Workspace). Open your Workspace, and click on the “Environment configuration” button, a cloud icon on the righthand side of the screen. Under Galaxy, click on “Create new Environment”. Click on “Next” and “Create” to keep all settings as-is. This will take 8-10 minutes. Click on “Open Galaxy” when the environment is ready. 8.5 Navigating Galaxy Notice the three main sections. Tools - These are all of the bioinformatics tool packages available for you to use. The Main Dashboard - This contains flash messages and posts when you first open Galaxy, but when we are using data this is the main interface area. History - When you start a project you will be able to see all of the documents in the project in the history. Now be aware, this can become very busy. Also the naming that Galaxy uses is not very intuitive, so you must make sure that you label your files with something that makes sense to you. On the welcome page, there are links to tutorials. You may try these out on your own. If you want to try a new analysis this is a good place to start. 8.6 Deleting Galaxy Once you are done with your activity, you’ll need to shut down your Galaxy cloud environment. This frees up the cloud resources for others and minimizes computing cost. The following steps will delete your work, so make sure you are completely finished at this point. Otherwise, you will have to repeat your work from the previous steps. Return to AnVIL, and find the Galaxy logo that shows your cloud environment is running. Click on this logo. Next, click on “Settings”. Click on “Delete Environment”. Finally, select “Delete everything, including persistent disk”. Make sure you are done with the activity and then click “Delete”. 8.7 Video overview on using RStudio Here is a video tutorial that describes the basics of using RStudio on AnVIL. 8.7.1 Objectives Start compute for your RStudio environment Tour RStudio on AnVIL Stop compute to minimize expenses 8.7.2 Slides The slides for this tutorial are are located here. 8.8 Launching RStudio AnVIL is very versatile and can scale up to use very powerful cloud computers. It’s very important that you select a cloud computing environment appropriate to your needs to avoid runaway costs. If you are uncertain, start with the default settings; it is fairly easy to increase your compute resources later, if needed, but harder to scale down. Note that, in order to use RStudio, you must have access to a Terra Workspace with permission to compute (i.e. you must be a “Writer” or “Owner” of the Workspace). Open Terra - use a web browser to go to anvil.terra.bio In the drop-down menu on the left, navigate to “Workspaces”. Click the triple bar in the top left corner to access the menu. Click “Workspaces”. Click on the name of your Workspace. You should be routed to a link that looks like: https://anvil.terra.bio/#workspaces/&lt;billing-project&gt;/&lt;workspace-name&gt;. Click on the cloud icon on the far right to access your Cloud Environment options. If you don’t see this icon, you may need to scroll to the right. In the dialogue box, click the “Settings” button under RStudio. You will see some configuration options for the RStudio cloud environment, and a list of costs because it costs a small amount of money to use cloud computing. Configure any settings you need for your cloud environment. If you are uncertain about what you need, the default configuration is a reasonable, cost-conservative choice. It is fairly easy to increase your compute resources later, if needed, but harder to scale down. Scroll down and click the “CREATE” button when you are satisfied with your setup. The dialogue box will close and you will be returned to your Workspace. You can see the status of your cloud environment by hovering over the RStudio icon. It will take a few minutes for Terra to request computers and install software. When your environment is ready, its status will change to “Running”. Click on the RStudio logo to open a new dialogue box that will let you launch RStudio. Click the launch icon to open RStudio. This is also where you can pause, modify, or delete your environment when needed. You should now see the RStudio interface with information about the version printed to the console. For more information about configuring your RStudio environment, you can check the Terra docs: Starting and customizing your RStudio app What packages are installed on preconfigured Cloud Environments? Preconfigure a Cloud Environment with a startup script Cloud Environment FAQs 8.9 Touring RStudio Next, we will be using RStudio and the package Glimma to create interactive plots. See this vignette for more information. The Bioconductor team has created a very useful package to programmatically interact with Terra and Google Cloud. Install the AnVIL package. It will make some steps easier as we go along. BiocManager::install(&quot;AnVIL&quot;) You can now quickly install precompiled binaries using the AnVIL package’s install() function. We will use it to install the Glimma package and the airway package. The airway package contains a SummarizedExperiment data class. This data describes an RNA-Seq experiment on four human airway smooth muscle cell lines treated with dexamethasone. {Note: for some of the packages, you will have to install packaged from the CRAN repository, using the install.packages() function. The examples will show you which install method to use.} ``` r AnVIL::install(c(&quot;Glimma&quot;, &quot;airway&quot;)) ``` &lt;br/&gt; &lt;img src=&quot;07-using_platforms_modules_files/figure-html//1BLTCaogA04bbeSD1tR1Wt-mVceQA6FHXa8FmFzIARrg_g11f12bc99af_0_56.png&quot; alt=&quot;Screenshot of the RStudio environment interface. Code has been typed in the console and is highlighted.&quot; width=&quot;100%&quot; /&gt; Load the example data. If you need to load data stored in your workspace or a GCP bucket, you’ll need to use the AnVILGCP package to load it into RStudio. The example in this walkthrough uses data from an imported R package. ``` r library(airway) data(airway) ``` &lt;br/&gt; &lt;img src=&quot;07-using_platforms_modules_files/figure-html//1BLTCaogA04bbeSD1tR1Wt-mVceQA6FHXa8FmFzIARrg_g11f12bc99af_0_56.png&quot; alt=&quot;Screenshot of the RStudio environment interface. Code has been typed in the console and is highlighted.&quot; width=&quot;100%&quot; /&gt; The multidimensional scaling (MDS) plot is frequently used to explore differences in samples. When this data is MDS transformed, the first two dimensions explain the greatest variance between samples, and the amount of variance decreases monotonically with increasing dimension. The following code will launch a new window where you can interact with the MDS plot. Glimma::glimmaMDS(assay(airway), group = colData(airway)$dex) Change the colour_by setting to “groups” so you can easily distinguish between groups. In this data, the “group” is the treatment. You can download the interactive html file by clicking on “Save As”. You can also download plots and other files created directly in RStudio. To download the following plot, click on “Export” and save in your preferred format to the default directory. This saves the file in your cloud environment. You should see the plot in the “Files” pane. Select this file and click “More” &gt; “Export” Select “Download” to save the file to your local machine. 8.10 Pausing RStudio When you are not actively performing an analysis (but will be returning soon), you should “pause” your cloud environment to minimize costs. This will release the CPU and memory resources for other people to use. Your files will be saved and will continue to accrue a small storage cost. Before pausing, it’s a good idea to transfer any important files out of your cloud environment. While a paused environment does preserve your files, it has no backup mechanism, so if anything happens to your cloud environment those files will be lost. If there is anything you would like to save permanently, it’s a good idea to copy it to another location, such as the Workspace bucket, GitHub, or your local machine. To pause your cloud environment: You can view costs and make changes to your cloud environments from the panel on the far right of the page. If you don’t see this panel, you may need to scroll to the right. Running environments will have a green dot, and paused environments will have an orange dot. Hovering over the RStudio icon will show you the costs associated with your RStudio environment. Click on the RStudio icon to open the cloud environment settings. Click the Pause button to pause RStudio. This will take a few minutes. When the environment is paused, an orange dot will be displayed next to the RStudio icon. If you hover over the icon, you will see that it is paused, and has a small ongoing cost as long as it is paused. When you’re ready to resume working, you can do so by clicking the RStudio icon and clicking Resume. You can also pause your cloud environment(s) at https://anvil.terra.bio/#clusters. 8.11 Deleting RStudio Pausing your cloud environment only temporarily stops your work. When you are ready to delete the cloud environment, click on the RStudio icon on the right-hand side and select “Settings”. If you don’t see this icon, you may need to scroll to the right. Click on “Delete Environment”. If you are certain that you do not need the data and configuration on your disk, you should select “Delete everything, including persistent disk”. If there is anything you would like to save, open the compute environment and copy the file(s) from your compute environment to another location, such as the Workspace bucket, GitHub, or your local machine, depending on your needs. Select “DELETE”. You can also delete your cloud environment(s) and disk storage at https://anvil.terra.bio/#clusters. 8.12 Pausing vs. Deleting cloud environments These instructions can be customized by setting the following variables in AnVIL_module_settings before running cow::borrow_chapter(): cloud_environment: (string) specify the type of cloud environment. Defaults to “your cloud environment” include_pd_details: (bool) whether to include an explanation about keeping the Persistent Disk. Defaults to FALSE 8.12.1 Generic cloud environment, with PD details AnVIL_module_settings &lt;- list(include_pd_details = TRUE) cow::borrow_chapter( doc_path = &quot;child/_child_cloud_environment_pause_vs_delete.Rmd&quot;, repo_name = &quot;jhudsl/AnVIL_Template&quot; ) Cloud computing costs are based on the amount of time you use the computing resources, so it’s important to clean up after yourself when you’re done, and not just leave the computers running. There are two ways to “shut down” your cloud environment on AnVIL: Pause the environment: This will save a copy of your work, and then release the computers for other people to use them. Do this if you plan to continue working in your cloud environment. It’s similar to turning off your computer or phone - when you start it back up, everything will be where you left it. This still costs a small amount of money, but much less than leaving the computer running. Delete the environment: This will delete everything and then release the computers for other people to use them. Do this if you are completely finished working, or if your future work will be in a new environment. It’s similar to throwing your computer or phone in the trash! You will not be able to recover your work. Make sure you have saved anything you need to another location (such as the Workspace bucket, GitHub, or your local machine) before you delete your environment. You can also delete the environment but keep the Persistent Disk (this is like keeping the hard drive while throwing away the rest of the computer). However in practice this is rarely preferable. You will continue to be charged for the Persistent Disk, and the Persistent Disk is both more expensive and less stable than your Workspace bucket. Anything that you want to keep long-term should be moved to your Workspace bucket. Some examples of when you might want to delete the environment but keep the persistent disk: You need to make certain types of changes to the cloud environment, which require you to delete and then recreate the environment. The PD allows you to safely delete your old environment and then attach the PD to the new environment, preserving your files. You will not be using the cloud environment for a while AND it would be difficult to recreate the contents of the disk. Sometimes there may be files (such as intermediate results or complicated package installations) that don’t need to be preserved long-term, but would be inconvenient to replace. The Persistent Disk can be used to keep those files around until you are ready to return to them, without incurring the cost of maintaining a paused cloud environment. Just keep in mind that (1) there is still a cost for the PD itself, which depends on the size of the PD, and (2) the PD is not backed up, so the files may be lost if something goes wrong with your cloud environment or PD. 8.12.2 RStudio, with no PD details AnVIL_module_settings &lt;- list(cloud_environment = &quot;RStudio&quot;) cow::borrow_chapter( doc_path = &quot;child/_child_cloud_environment_pause_vs_delete.Rmd&quot;, repo_name = &quot;jhudsl/AnVIL_Template&quot; ) Cloud computing costs are based on the amount of time you use the computing resources, so it’s important to clean up after yourself when you’re done, and not just leave the computers running. There are two ways to “shut down” RStudio on AnVIL: Pause the environment: This will save a copy of your work, and then release the computers for other people to use them. Do this if you plan to continue working in RStudio. It’s similar to turning off your computer or phone - when you start it back up, everything will be where you left it. This still costs a small amount of money, but much less than leaving the computer running. Delete the environment: This will delete everything and then release the computers for other people to use them. Do this if you are completely finished working, or if your future work will be in a new environment. It’s similar to throwing your computer or phone in the trash! You will not be able to recover your work. Make sure you have saved anything you need to another location (such as the Workspace bucket, GitHub, or your local machine) before you delete your environment. "],["data-modules.html", "Chapter 9 Data modules 9.1 Getting Data from HPC to AnVIL", " Chapter 9 Data modules Modules aimed importing and managing data on AnVIL. 9.1 Getting Data from HPC to AnVIL If you’re used to working on High Performance Computing (HPC, or “on-premises” institutional servers) you’ll likely need to transfer files from your HPC to AnVIL. You can check out this Terra documentation for the most recent information on installing Google Cloud SDK. There’s also great documentation about moving data to/from Google buckets here. You will need to: Install Google Cloud SDK (gcloud) on your server “Initialize” glcoud and authenticate with your Google account Connect to your Workspace Transfer files Step 1: Install Google Cloud SDK on your server. This is software that enables file transfer. The code here is an example specifically for a Linux server. You might need to follow different instructions depending on your server setup. curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-linux-x86_64.tar.gz tar -xf google-cloud-cli-linux-x86_64.tar.gz google-cloud-sdk/install.sh Step 2: Initialize gcloud. You might need to specify the path to the executable gcloud, e.g., google-cloud-sdk/bin/gcloud init. gcloud init You will be asked to copy and paste a long link in your browser. Enter the authorization code to confirm Google Cloud SDK access. Go to the following link in your browser: https://accounts.google.com/o/oauth2/auth?response.... Enter authorization code: Step 3: Connect to your Workspace. You will see a message like this: This account has a lot of projects! Listing them all can take a while. [1] Enter a project ID [2] Create a new project [3] List projects Please enter your numeric choice: Select 1 to enter your Workspace’s Google Project ID. You can find this by opening your Workspace and viewing the Dashboard tab. It will look something like terra-123abcefg. Confirm you are in the right place by typing in the following. The command should return the Bucket name. gcloud storage ls Step 4: Transfer files. Now you’re ready to copy data over! Use the command below, replacing the /data/user_name/data_folder with the directory on your server, and replacing gs://fc-a1b2c3 with your Bucket name. You can find the Bucket name by entering gcloud storage ls or checking the Workspace and viewing the Dashboard tab. Note that the -r flag is “recursive”, which means all files in that directory will be moved over. gcloud storage cp -r /data/user_name/data_folder gs://fc-a1b2c3 "],["student-instructions.html", "Chapter 10 Student instructions 10.1 Student Account Setup 10.2 Student instructions for cloning a Workspace 10.3 Student instructions for launching Jupyter 10.4 Student instructions for launching RStudio", " Chapter 10 Student instructions Modules aimed at students in a course or workshop. 10.1 Student Account Setup In order to run your analyses, you will use the AnVIL cloud computing platform. The AnVIL (Analysis Visualization and Informatics Lab-space) platform is specially designed for analyzing biological data, and is used by scientists doing all sorts of biological research. AnVIL in a nutshell Behind the scenes, AnVIL relies on Google Cloud Platform to provide computing infrastructure. Basically, AnVIL lets you “rent” computers through the internet. The analysis is run on the rented computer. AnVIL lets you see the results in your browser. AnVIL uses Terra to provide many computational tools useful for biological data analysis, such as RStudio, Galaxy, and Jupyter Notebooks. Terra takes care of installing these tools so you can use them right away. 10.1.1 Create Google Account First, you will need to set up a (free) Google account. A Google account usually looks like “myname@gmail.com”. Alternatively, you can enable Google for an existing non-Gmail email address using these instructions. If you do not already have a Google account that you would like to use for accessing AnVIL, create one now. 10.1.2 Log In to Terra Next, make sure you can log in to Terra – you will use Terra to perform computations on AnVIL. You can access Terra by going to anvil.terra.bio. Open Terra, and you should be prompted to sign in with your Google account. 10.1.3 Share Username Make sure your instructor has your Google account username (e.g. myname@gmail.com), so they can give you access to everything you need. Make sure there are no typos! If you have multiple Google accounts, make sure you give them the username that you will be using to log in to anvil.terra.bio. It is very important that you share the Google account you will be using to access AnVIL with with your instructor! Otherwise, the instructor cannot add you to Billing Projects or Workspaces, and you will be unable to proceed with your assignments. 10.2 Student instructions for cloning a Workspace These instructions can be customized to a specific workspace by setting certain variables before running cow::borrow_chapter(). If these variables have not been set, reasonable defaults are provided (e.g. “ask your instructor”). 10.2.1 With no variables set: This will not work until your instructor has given you permission to spend money to “rent” the computers that will power your analyses (by adding you to a “Billing Project”). On AnVIL, you access files and computers through Workspaces. Each Workspace functions almost like a mini code laboratory - it is a place where data can be examined, stored, and analyzed. The first thing we want to do is to copy or “clone” a Workspace to create a space for you to experiment. This will give you access to the files you will need (data, code) the computing environment you will use Tip At this point, it might make things easier to open up a new window in your browser and split your screen. That way, you can follow along with this guide on one side and execute the steps on the other. To clone an AnVIL Workspace: Open Terra - use a web browser to go to anvil.terra.bio In the drop-down menu on the left, navigate to “Workspaces”. Click the triple bar in the top left corner to access the menu. Click “Workspaces”. You are automatically directed to the “MY WORKSPACES” tab. Here you can see any Workspaces that have been shared with you, along with your permission level. Depending on how your instructor has set things up, you may or may not see any Workspaces in this tab. Locate the Workspace specified by your instructor. (The images below show the SARS-CoV-2-Genome Workspace as an example, but you should look for the Workspace specified by your instructor.) If it has been shared with you ahead of time, it will appear in “MY WORKSPACES”. Otherwise, select the “PUBLIC” tab. In the top search bar, type the Workspace name specified by your instructor. You can also go directly to the Workspace by clicking this link: ask your instructor. Clone the workspace by clicking the teardrop button (). Select “Clone”. Or, if you have opened the Workspace, you can find the teardrop button on the top right of the Workspace. You will see a popup box appear, asking you to configure your Workspace Give your Workspace clone a name by adding an underscore (“_“) and your name. For example, \"ExampleWorkspace_Firstname_Lastname\". Select the Billing Project provided by your instructor. Leave the bottom two boxes as-is. Click “CLONE WORKSPACE”. The new Workspace should now show up under “MY WORKSPACES”. You now have your own copy of the Workspace to work in. 10.2.2 With variables set: This will not work until your instructor has given you permission to spend money to “rent” the computers that will power your analyses (by adding you to a “Billing Project”). On AnVIL, you access files and computers through Workspaces. Each Workspace functions almost like a mini code laboratory - it is a place where data can be examined, stored, and analyzed. The first thing we want to do is to copy or “clone” a Workspace to create a space for you to experiment. This will give you access to the files you will need (data, code) the computing environment you will use Tip At this point, it might make things easier to open up a new window in your browser and split your screen. That way, you can follow along with this guide on one side and execute the steps on the other. To clone an AnVIL Workspace: Open Terra - use a web browser to go to anvil.terra.bio In the drop-down menu on the left, navigate to “Workspaces”. Click the triple bar in the top left corner to access the menu. Click “Workspaces”. You are automatically directed to the “MY WORKSPACES” tab. Here you can see any Workspaces that have been shared with you, along with your permission level. Depending on how your instructor has set things up, you may or may not see any Workspaces in this tab. Locate the Workspace Example_Workspace. (The images below show the SARS-CoV-2-Genome Workspace as an example, but you should look for the Workspace Example_Workspace.) If it has been shared with you ahead of time, it will appear in “MY WORKSPACES”. Otherwise, select the “PUBLIC” tab. In the top search bar, type the Workspace name Example_Workspace. You can also go directly to the Workspace by clicking this link: http://example.com/. Clone the workspace by clicking the teardrop button (). Select “Clone”. Or, if you have opened the Workspace, you can find the teardrop button on the top right of the Workspace. You will see a popup box appear, asking you to configure your Workspace Give your Workspace clone a name by adding an underscore (“_“) and your name. For example, \"Example_Workspace_Firstname_Lastname\". Select the Billing Project Example Billing Project. Leave the bottom two boxes as-is. Click “CLONE WORKSPACE”. The new Workspace should now show up under “MY WORKSPACES”. You now have your own copy of the Workspace to work in. 10.3 Student instructions for launching Jupyter The module below is specially customized for students, allowing you to give more specific instructions on the settings for their Jupyter environment. There are several other general purpose modules that may also be useful for students (e.g. Pausing Jupyter, Deleting Jupyter) that can be found in other chapters of this book. The following instructions can be customized by setting certain variables before running cow::borrow_chapter(). Developers should create these variables as a list AnVIL_module_settings. The following variables can be provided: audience = Defaults to general, telling them to use the default Jupyter settings. If audience is set to student, it gives more specific instructions. docker_image = Optional, it will tell them how to set the image. startup_script = Optional, it will tell them how to set the script. workspace_name = Optional, it will tell them which Workspace to use to launch Jupyter. notebook_name = Optional, it will tell them to open a specific Notebook 10.3.1 Set audience to student, but don’t specify details: # Specify variables AnVIL_module_settings &lt;- list( audience = &quot;student&quot; ) cow::borrow_chapter( doc_path = &quot;child/_child_jupyter_launch.Rmd&quot;, repo_name = &quot;jhudsl/AnVIL_Template&quot; ) AnVIL is very versatile and can scale up to use very powerful cloud computers. It’s very important that you select the cloud computing environment described here to avoid runaway costs. For this activity, you should launch Jupyter from your copy of the Workspace specified by your instructor. (It should be named something like ExampleWorkspace_Firstname_Lastname). If you don’t yet have your own copy, make one now by cloning the Workspace specified by your instructor before following the steps below. Open Terra - use a web browser to go to anvil.terra.bio In the drop-down menu on the left, navigate to “Workspaces”. Click the triple bar in the top left corner to access the menu. Click “Workspaces”. Click on the name of your Workspace (e.g. ExampleWorkspace_Firstname_Lastname). You should be routed to a link that looks like: https://anvil.terra.bio/#workspaces/&lt;billing-project&gt;/&lt;workspace-name&gt; Click on the cloud icon on the far right to access your Cloud Environment options. If you don’t see this icon, you may need to scroll to the right. In the dialogue box, click the “Settings” button under Jupyter. You will see some configuration options for the Jupyter cloud environment, and a list of costs because it costs a small amount of money to use cloud computing. Leave everything else as-is. To create your Jupyter Cloud Environment, scroll down and click the “CREATE” button. The dialogue box will close and you will be returned to your Workspace. You can see the status of your cloud environment by hovering over the Jupyter icon. It will take a few minutes for Terra to request computers and install software. When your environment is ready, its status will change to “Running”. Click on the “ANALYSES” tab to create or open a Jupyter Notebook. From the ANALYSES tab, you can click on the name of an existing Jupyter Notebook to view and launch it, or click the “START” button to create a new Notebook. Clicking on a Notebook name will open a static preview of the Notebook. To edit and run the Notebook, click the “OPEN” button. 10.3.2 Set custom instructions: # Specify variables AnVIL_module_settings &lt;- list( audience = &quot;student&quot;, docker_image = &quot;example docker&quot;, startup_script = &quot;example startup script&quot;, workspace_name = &quot;My_Class_Workspace&quot;, notebook_name = &quot;Awesome_Notebook&quot; ) cow::borrow_chapter( doc_path = &quot;child/_child_jupyter_launch.Rmd&quot;, repo_name = &quot;jhudsl/AnVIL_Template&quot; ) AnVIL is very versatile and can scale up to use very powerful cloud computers. It’s very important that you select the cloud computing environment described here to avoid runaway costs. For this activity, you should launch Jupyter from your copy of the Workspace My_Class_Workspace. (It should be named something like My_Class_Workspace_Firstname_Lastname). If you don’t yet have your own copy, make one now by cloning the Workspace My_Class_Workspace before following the steps below. Open Terra - use a web browser to go to anvil.terra.bio In the drop-down menu on the left, navigate to “Workspaces”. Click the triple bar in the top left corner to access the menu. Click “Workspaces”. Click on the name of your Workspace (e.g. My_Class_Workspace_Firstname_Lastname). You should be routed to a link that looks like: https://anvil.terra.bio/#workspaces/&lt;billing-project&gt;/&lt;workspace-name&gt; Click on the cloud icon on the far right to access your Cloud Environment options. If you don’t see this icon, you may need to scroll to the right. In the dialogue box, click the “Settings” button under Jupyter. You will see some configuration options for the Jupyter cloud environment, and a list of costs because it costs a small amount of money to use cloud computing. Under “Application configuration” you will see a dropdown menu. Choose “Custom Environment”. Then copy the following link into “Container image” textbox: example docker Under “Startup script” you will see textbox. Copy the following link into the box: example startup script Leave everything else as-is. To create your Jupyter Cloud Environment, scroll down and click the “CREATE” button. The dialogue box will close and you will be returned to your Workspace. You can see the status of your cloud environment by hovering over the Jupyter icon. It will take a few minutes for Terra to request computers and install software. When your environment is ready, its status will change to “Running”. Click on the “ANALYSES” tab to create or open a Jupyter Notebook. From the ANALYSES tab, you can click on the name of an existing Jupyter Notebook to view and launch it, or click the “START” button to create a new Notebook. Find the Notebook named Awesome_Notebook. Click on its name, then click the “OPEN” button to run and edit this Notebook. (Clicking on its name opens a static preview of the Notebook, which can be useful for viewing your previous work but will not let you run the code. You must click the OPEN button to run or edit the code.) 10.4 Student instructions for launching RStudio The module below is specially customized for students, allowing you to give more specific instructions on the settings for their RStudio environment. There are several other general purpose modules that may also be useful for students (e.g. Pausing RStudio, Deleting RStudio) that can be found in other chapters of this book. The following instructions can be customized by setting certain variables before running cow::borrow_chapter(). Developers should create these variables as a list AnVIL_module_settings. The following variables can be provided: audience = Defaults to general, telling them to use the default RStudio settings. If audience is set to student, it gives more specific instructions. docker_image = Optional, it will tell them to open the customization dialogue and direct them on how to set the image. startup_script = Optional, it will tell them to open the customization dialogue and direct them on how to set the script. 10.4.1 Using default RStudio environment: AnVIL is very versatile and can scale up to use very powerful cloud computers. It’s very important that you select the cloud computing environment described here to avoid runaway costs. Open Terra - use a web browser to go to anvil.terra.bio In the drop-down menu on the left, navigate to “Workspaces”. Click the triple bar in the top left corner to access the menu. Click “Workspaces”. Click on the name of your Workspace. You should be routed to a link that looks like: https://anvil.terra.bio/#workspaces/&lt;billing-project&gt;/&lt;workspace-name&gt;. Click on the cloud icon on the far right to access your Cloud Environment options. If you don’t see this icon, you may need to scroll to the right. In the dialogue box, click the “Settings” button under RStudio. You will see some configuration options for the RStudio cloud environment, and a list of costs because it costs a small amount of money to use cloud computing. Leave everything else as-is. To create your RStudio Cloud Environment, scroll down and click the “CREATE” button. The dialogue box will close and you will be returned to your Workspace. You can see the status of your cloud environment by hovering over the RStudio icon. It will take a few minutes for Terra to request computers and install software. When your environment is ready, its status will change to “Running”. Click on the RStudio logo to open a new dialogue box that will let you launch RStudio. Click the launch icon to open RStudio. This is also where you can pause, modify, or delete your environment when needed. You should now see the RStudio interface with information about the version printed to the console. For more information about configuring your RStudio environment, you can check the Terra docs: Starting and customizing your RStudio app What packages are installed on preconfigured Cloud Environments? Preconfigure a Cloud Environment with a startup script Cloud Environment FAQs 10.4.2 Using custom RStudio environment: AnVIL is very versatile and can scale up to use very powerful cloud computers. It’s very important that you select the cloud computing environment described here to avoid runaway costs. Open Terra - use a web browser to go to anvil.terra.bio In the drop-down menu on the left, navigate to “Workspaces”. Click the triple bar in the top left corner to access the menu. Click “Workspaces”. Click on the name of your Workspace. You should be routed to a link that looks like: https://anvil.terra.bio/#workspaces/&lt;billing-project&gt;/&lt;workspace-name&gt;. Click on the cloud icon on the far right to access your Cloud Environment options. If you don’t see this icon, you may need to scroll to the right. In the dialogue box, click the “Settings” button under RStudio. You will see some configuration options for the RStudio cloud environment, and a list of costs because it costs a small amount of money to use cloud computing. Under “Application configuration” you will see a dropdown menu. Choose “Custom Environment”. Then copy the following link into “Container image” textbox: example docker Under “Startup script” you will see textbox. Copy the following link into the box: example startup script Leave everything else as-is. To create your RStudio Cloud Environment, scroll down and click the “CREATE” button. The dialogue box will close and you will be returned to your Workspace. You can see the status of your cloud environment by hovering over the RStudio icon. It will take a few minutes for Terra to request computers and install software. When your environment is ready, its status will change to “Running”. Click on the RStudio logo to open a new dialogue box that will let you launch RStudio. Click the launch icon to open RStudio. This is also where you can pause, modify, or delete your environment when needed. You should now see the RStudio interface with information about the version printed to the console. For more information about configuring your RStudio environment, you can check the Terra docs: Starting and customizing your RStudio app What packages are installed on preconfigured Cloud Environments? Preconfigure a Cloud Environment with a startup script Cloud Environment FAQs "],["user-management.html", "Chapter 11 User Management 11.1 Create Terra Group 11.2 Add Member to Terra Group 11.3 Find Group Email", " Chapter 11 User Management Modules about Groups and user management 11.1 Create Terra Group Launch Terra and sign in with your Google account. In the drop-down menu on the left, navigate to “Groups”. Click the triple bar in the top left corner to access the menu. Click the arrow next to your name to expand the menu, then click “Groups”. You can also navigate there directly with this link: https://anvil.terra.bio/#groups Click “+ Create a New Group” Enter a name for your group. Names must be unique, so it’s often helpful to include your team’s name, the purpose of the group, and optionally the timeframe, if you will have similar groups in the future. Click “CREATE GROUP” Your new Group should now show up on the Group Management screen. Take note of the email address associated with your group. You will use this email to grant the group access to Billing Projects and Workspaces. 11.2 Add Member to Terra Group Launch Terra and sign in with your Google account. In the drop-down menu on the left, navigate to “Groups”. Click the triple bar in the top left corner to access the menu. Click the arrow next to your name to expand the menu, then click “Groups”. You can also navigate there directly with this link: https://anvil.terra.bio/#groups Find the name of the Group you want to add someone to, and confirm that you have Admin privileges for the Group (you can only add and remove members to a Group if you are an Admin). Click on the name of the Group to view and manage members. Click on “+ Add User”. You will be prompted to enter the user’s AnVIL ID. Type in the user’s email address. Make sure this is the account that they will be using to access AnVIL. If this member will need to add and remove other members of the Group, check the box for “Can manage members (admin)”. This will add them as an “Admin” for the Group. Otherwise leave it unchecked, and they will be added as a “Member”. Admins and Members have equal access to any resources shared with the Group. Admins can manage Group membership - they can add, remove, or change the role of other Group members. Click ADD USER. This will take you back to the Group administration page. The new Group member will now be shown in the list of group members, along with their role. They should now have access to anything that the Group has been given access to. If you need to remove members or modify their roles, you can do so at any time by clicking the teardrop button next to their name. 11.3 Find Group Email Launch Terra and sign in with your Google account. In the drop-down menu on the left, navigate to “Groups”. Click the triple bar in the top left corner to access the menu. Click the arrow next to your name to expand the menu, then click “Groups”. You can also navigate there directly with this link: https://anvil.terra.bio/#groups Find the name of the Group, then look in the “Group Email” column to find the email address associated with the Group. Copy this email address and paste it in as the username when adding people to Billing Projects and Workspaces. This will grant everyone in the Group access to the Billing Project or Workspace. "],["why-anvil.html", "Chapter 12 Why AnVIL 12.1 Why AnVIL for Instructors?", " Chapter 12 Why AnVIL Modules describing why AnVIL is useful for different personas. 12.1 Why AnVIL for Instructors? You may be wondering if AnVIL is a good choice for your class. We feel the answer is an unequivocal YES! AnVIL provides all the advantages of a cloud computing environment: Version control: All students will be using the exact same versions of programs, running on the exact same operating system, and the majority of setup can be handled for the students ahead of time. This greatly reduces time spent on setup and prevents unexpected run errors during the activities, limiting the amount of troubleshooting you have to do. As a result, classes and activities will run more smoothly and predictably. Inclusivity: Cloud-computing enables all students to participate in the activity without needing to provide computers with certain specifications. Experience: Cloud-computing is becoming common in today’s bioinformatics workplaces, and the classroom is a low-stress and low-stakes opportunity for students to gain experience. AnVIL is purpose-built for genomic data science: Tools: Through AnVIL, students can access a wide range of tools (Galaxy, RStudio/Bioconductor, Jupyter, as well as scripted workflows) all in one place, and can easily transition between them. Datasets: AnVIL provides a large and growing collection of relevant datasets with standardized organization, for easier importing and processing. Authenticity: On AnVIL, students will be working in the same environment as scientists carrying out cutting edge research. "],["why-use-anvil.html", "Chapter 13 Why use AnVIL? 13.1 Benefits of using AnVIL for research 13.2 Benefits of using AnVIL in the classroom 13.3 Overall benefits of AnVIL 13.4 Conclusion", " Chapter 13 Why use AnVIL? The NHGRI AnVIL (Genomic Data Science Analysis, Visualization, and Informatics Lab-space) is a project powered by Terra for biomedical researchers to access data, run analysis tools, and collaborate. Both biology researchers and educators can benefit from using AnVIL (anvil.terra.bio) for their research and in the classroom. This guide acts as a resource answering the question “why use AnVIL?”. It will discuss the research, classroom, and general benefits of using AnVIL and point to related resources throughout. 13.1 Benefits of using AnVIL for research 13.1.1 Ease of platform access The primary means of accessing the AnVIL platform (anvil.terra.bio) is through a web browser - users do not need to download data or install software. Accessing AnVIL beyond the web browser The platform (anvil.terra.bio) provides a variety of graphical user interfaces (GUIs) as well as optional application programming interface (API) library/command line interfaces to interact with data, analysis solutions, and workflows. Bioconductor packages (AnVIL, AnVILGCP, AnVILWorkflow) offer additional methods for users to programmatically interact with and access AnVIL resources from within AnVIL, or stand-alone computing environments such as a user’s laptop. 13.1.2 Variety of analysis solutions AnVIL supports an assortment of frameworks and tools. Researchers can use their favorite tool to work with data interactively or through non-interactive batch processing. Due to this variety and interoperability with other platforms, researchers can stay within a single environment for their analysis without having to shift between platforms. Interactive sessions Interactive sessions are available with Jupyter, RStudio/Bioconductor, and Galaxy. Use of Galaxy on AnVIL enables even more customizability with the ability to install specific tools/versions with Toolshed. Non-interactive batch processing Workflows can be user-supplied/written or imported with Dockstore and used to steer non-interactive pipelines and batch processing of data. 13.1.3 Data: yours or cloud-hosted open &amp; controlled access AnVIL securely stores diverse, open and controlled access, cloud-hosted datasets with a browsable summary catalog so researchers can identify relevant datasets they may need to request access to. Consortia Data on the AnVIL Data on the AnVIL includes data from consortia such as The Amyotrophic Lateral Sclerosis (ALS) Compute Project NIH Intramural Center for Alzheimer’s and Related Dementias (CARD) The Centers for Common Disease Genomics (CCDG) The Centers for Mendelian Genomics (CMG) Genomics Research to Elucidate the Genetics of Rare diseases (GREGoR) Genotype-Tissue Expression (GTEx) project International Fetal Genomics Consortium (IFGC) The 1000 Genomes Project The Clinical Sequencing Evidence-Generating Research (CSER) consortium The Electronic and MEdical Records and Genomics project (eMERGE) The Population Architecture Using Genomics and Epidemiology Consortium (PAGE) The Human Pangenome Reference Consortium (HPRC) Telomere-to-Telomere (T2T) Additional consortia or upcoming planned data ingestion can be found on the AnVIL project portal. By inverting the typical method of genomic analysis, AnVIL brings a computing environment to the data rather than moving the data from storage to the computing environment or stories copies of the data across institutional high performance computing clusters. Amount of data on AnVIL As discussed in the flagship AnVIL paper, the AnVIL hosts data from &gt;280,000 human genomes from &gt;240 different cohorts spanning multiple consortia and major NHGRI projects. The AnVIL offers a browsable catalog of summary information about all of the datasets so that even if a user isn’t authorized to access the data itself, they can better determine if the data will be helpful for their research if they need to apply for authorization for access. AnVIL is working to facilitate data harmonization across studies, ensuring consistency and interoperability, which is critical for large-scale analyses. These efforts will increase the value of the AnVIL data and maximize its utility to the researcher community. AnVIL is a FedRAMP Moderate compliant platform As a FedRAMP Moderate compliant platform, AnVIL maintains FedRAMP authorization of compliance to ensure as a cloud service provider, minimum security requirements are met for data processing, storage, and transmission of Protected Health Information (PHI) and Personally Identifiable Information (PII) where loss of confidentiality, integrity, and availability would result in serious adverse effect or non-life threatening harm. All steps necessary to maintain compliance, such as robust logging of access to data, periodic audits by third-party analysts, and monitoring for abnormal use patterns are managed and guaranteed by AnVIL. 13.1.4 Data &amp; analysis in same place AnVIL is a unified computing environment for data storage, management, and analysis. The AnVIL portal serves as an entry point to access all parts of the AnVIL system as well as training materials and announcements. 13.1.5 Scalability AnVIL is conducive to analysis at massive scale and for data exploration and training. Researchers get access to dedicated compute resources, avoiding queue time and lack of access at some institutions. Researchers can also launch light environments or run test analyses without incurring much cost or spending a lot of time to configure. 13.1.6 Rent needed resources AnVIL allows you to rent the computational resources that you need for occasional high demand needs rather than obtaining and maintaining the same resources yourself or paying a subscription for an allocation/constant access (with little consistent use over time). AnVIL can provide different hardware and software setups, rather than preparing the environment yourself (or relying on an institutional core to do it and waiting in the queue). Additional considerations Other considerations that make renting computational resources from AnVIL appealing compared to obtaining and maintaining your own resources or upgrading an institutional allocation (HPC) include: AnVIL is compliant with protected data. Some institutional HPCs may not be. Once your group is initially set up on AnVIL, adding users (with specified permissions) is easier than trying to add a user to an allocation through an email chain. Because AnVIL maintains docker images, the exact version of a tool is documented and available. AnVIL scales well for large numbers of samples and won’t require long waits in queues to access limited, specialized resources; AnVIL also works well for small analyses where you may not want to connect to the HPC and set up a complicated environment there. 13.1.7 Role-based permissions Group management can be utilized to control who can access specific data, analysis workspaces, and your billing resources. Workspaces provide a collaborative environment with role-based permissions. These permission include reading, writing, or owning with additional permissions for running compute and sharing. Especially within the contexts of working with sensitive data or large amounts of data, AnVIL’s role-based group management permission structure is instrumental. 13.1.8 Shareable workspaces Workspaces can contain data, metadata, and analysis tools, as well as documentation and history of workflow runs, additionally displaying important information such as when the workspace was created and last modified. AnVIL workspaces on the web can serve as shareable, reproducible records of analyses. Research conducted on the AnVIL platform has contributed to over 115 scientific publications citing the AnVIL paper, demonstrating its role in advancing genomic and biomedical research. Examples of AnVIL workspaces shared in publications AnVIL workspaces have previously been shared in publications to demonstrate reproducible science. https://www.science.org/doi/10.1126/science.abl3533 https://www.science.org/doi/10.1126/science.abe3261 https://anvil.terra.bio/#workspaces/help-gatk/Reproducibility_Case_Study_Tetralogy_of_Fallot 13.1.9 Repository compliant with DMS Policy The AnVIL serves as a cloud data repository compliant with the Data Management and Sharing (DMS) Policy. Data access controls can be specified to limit data access and use. By submitting their data to AnVIL, not only can researchers meet the requirements of DMS Policy, they can also contribute to the expanding network of NIH funded data housed in the AnVIL, furthering scientific discovery. What is DMS Policy? The National Institutes of Health (NIH) Data Management and Sharing (DMS) policy requires that all NIH-supported research which generates scientific data (barring ethical, legal, or technical factors limiting data sharing) must create a plan and budget for data management and sharing. While some funding announcements for some research may specify which repository should be used to comply with DMS policy, mostly the NIH does not specify where data should be stored.. The NIH does provide an interactive table listing NIH supported data repositories than can be used and suggests that researchers use a repository most appropriate for the data generated from their research. How is data access managed and requests granted? AnVIL utilizes the Data Use and Oversight System (DUOS) to efficiently expedite data access and management while maintaining security. Researchers can explore datasets hosted in the AnVIL cloud and request access using DUOS. Data use limitations can be set if necessary with Data Access Committees reviewing access requests. 13.2 Benefits of using AnVIL in the classroom AnVIL provides all the advantages of a cloud computing environment, such as version control and offering a unified computing system without providing physical computers with certain specifications. Additionally, AnVIL provides students with authentic experience working in the cloud – which is becoming common in today’s research environment. Students can also gain experience with a variety of tools (e.g., Galaxy, RStudio, Jupyter notebooks, WDL workflows) all in one place while working with relevant datasets and prepared exercises. Instructor Guide Available See more in our instructor guide on why AnVIL is a good choice for your classroom. 13.3 Overall benefits of AnVIL 13.3.1 Ability to control costs Cloud computing is not free and estimating costs may seem daunting to those considering use of the AnVIL. However, Terra provides thorough, transparent documentation explaining data storage and cloud computing costs and has been working to improve transparency and management of costs for AnVIL users through cost reporting, cost controls and estimates, and cost optimizations. Additionally, in order to debug or benchmark your work, analyses or workflows can be tested with smaller scale test datasets or light environments without incurring much cost or spending a lot of time to configure environments. 13.3.2 Work with protected data safely Due to AnVIL maintaining compliance with FedRAMP policies, clinical data containing PHI and PII can be safely and securely stored and analyzed on AnVIL. This includes the ability to export data from clinical data collection and management tools like REDCap and import it into AnVIL Terra Tables. 13.3.3 Maintenance is handled Since AnVIL handles the support and maintenance of the platform (including the hardware and software), you can focus on performing your work on AnVIL rather than setting up and maintaining the platform, freeing up effort for your science. This is immensely valuable for researchers who do not have deep institutional IT and system administrator support for research infrastructure. 13.3.4 Training and support is available To equip researchers and students to work on the AnVIL, the AnVIL team provides and maintains training materials and documentation in multiple formats (ex: Getting Started on AnVIL), moderates a support forum hosts demos (ex: https://anvilproject.org/events/anvil2023-december-demos) hosts workshops (ex: https://anvilproject.org/events/anvil2024-nhgri-intramural-workshop) 13.3.5 Collaborative community AnVIL has begun hosting community conferences to collaboratively innovate during CoFests! and to discuss research performed with the platform. The community can work directly with the AnVIL team to understand current development, feature requests, and a roadmap or future directions for the platform. Past and Upcoming AnVIL Community Conferences 2024: https://anvilproject.org/events/anvil2024-community-conference 2025: https://anvilproject.org/events/anvil2025-community-conference Additionally, AnVIL values and routinely solicits user feedback to improve the user experience and provide the most beneficial features and enhancement for biomedical research. Feedback is gathered: at the community conference through State of the AnVIL community polls through voluntary user interviews 24/7 at the support forum help.anvilproject.org 13.4 Conclusion All of this together describes how the AnVIL provides secure, cost-effective genomic analysis at scale, and is a useful cloud-based platform for training and research. "],["instructor-modules.html", "Chapter 14 Instructor modules 14.1 Why AnVIL for Instructors? 14.2 Checklist Link 14.3 Checklist Timeline (premade content) 14.4 Recommendation to use STRIDES", " Chapter 14 Instructor modules Modules aimed at instructors. 14.1 Why AnVIL for Instructors? You may be wondering if AnVIL is a good choice for your class. We feel the answer is an unequivocal YES! AnVIL provides all the advantages of a cloud computing environment: Version control: All students will be using the exact same versions of programs, running on the exact same operating system, and the majority of setup can be handled for the students ahead of time. This greatly reduces time spent on setup and prevents unexpected run errors during the activities, limiting the amount of troubleshooting you have to do. As a result, classes and activities will run more smoothly and predictably. Inclusivity: Cloud-computing enables all students to participate in the activity without needing to provide computers with certain specifications. Experience: Cloud-computing is becoming common in today’s bioinformatics workplaces, and the classroom is a low-stress and low-stakes opportunity for students to gain experience. AnVIL is purpose-built for genomic data science: Tools: Through AnVIL, students can access a wide range of tools (Galaxy, RStudio/Bioconductor, Jupyter, as well as scripted workflows) all in one place, and can easily transition between them. Datasets: AnVIL provides a large and growing collection of relevant datasets with standardized organization, for easier importing and processing. Authenticity: On AnVIL, students will be working in the same environment as scientists carrying out cutting edge research. 14.2 Checklist Link Here is a checklist to help you keep track of the steps for setting up and teaching on AnVIL. Details about each of these steps can be found in the AnVIL Instructor Guide. Note that this checklist is written for workshop instructors as well as classroom instructors, so some of the “Event Setup” steps may not be applicable to you, depending on your teaching context. 14.3 Checklist Timeline (premade content) 1+ month before: Figure out how you will fund the class/workshop. Start working through INSTRUCTOR SETUP. It’s a good idea to get billing figured out with plenty of time to spare. Take some time to familiarize yourself with the content and make any desired updates or customizations. Do any necessary EVENT SETUP steps. ~1 week before: Start working through RUNNING THE CLASS. If possible, have students log in to AnVIL and send you their usernames, so you can add them to the Student Group ahead of time. This saves time on the day of the class. Do not add students to your Billing Project ahead of time. This prevents them from accruing costs. Day of (or shortly before): Add students to Billing Project. Have students clone the Workspace (They cannot do this until you have added them to the Billing Project. As soon as they do this, they can start computing.). After: Collect feedback, if you didn’t do it during the class/workshop. Work though EVENT WRAP-UP - until you shut things down, you will continue to accrue costs. 14.4 Recommendation to use STRIDES If you are new to AnVIL, we strongly recommend seeking funding through NHGRI / STRIDES for teaching your course. In order to prevent abuse, Google sets certain limits on cloud resources available to new users that can complicate teaching (e.g. project quotas). As you or your institution builds a payment history with Google, the limits on your accounts will be relaxed. In the meantime, STRIDES funding can help ensure your initial classes run smoothly. What is STRIDES? NHGRI’s strategic vision highlights the importance of training the next generation of genomic scientists. In collaboration with the NIH Office of Data Science Strategy, NHGRI makes funding available to AnVIL users through the STRIDES program, which aims to promote biological research in cloud environments. To inquire about funding your class on AnVIL, please contact help@lists.anvilproject.org. "],["about-the-authors.html", "About the Authors", " About the Authors These credits are based on our course contributors table guidelines.     Credits Names Pedagogy Lead Content Instructor(s) FirstName LastName Lecturer(s) (include chapter name/link in parentheses if only for specific chapters) - make new line if more than one chapter involved Delivered the course in some way - video or audio Content Author(s) (include chapter name/link in parentheses if only for specific chapters) - make new line if more than one chapter involved If any other authors besides lead instructor Content Contributor(s) (include section name/link in parentheses) - make new line if more than one section involved Wrote less than a chapter AnVIL instructions: Katherine Cox, Ava Hoffman, Elizabeth Humphries Content Editor(s)/Reviewer(s) Checked your content Content Director(s) Helped guide the content direction Content Consultants (include chapter name/link in parentheses or word “General”) - make new line if more than one chapter involved Gave high level advice on content AnVIL instructions: Allie Cliffe Acknowledgments Gave small assistance to content but not to the level of consulting Production Content Publisher(s) Helped with publishing platform Content Publishing Reviewer(s) Reviewed overall content and aesthetics on publishing platform Technical Course Publishing Engineer(s) Helped with the code for the technical aspects related to the specific course generation Template Publishing Engineers Candace Savonen, Carrie Wright Publishing Maintenance Engineer Candace Savonen Technical Publishing Stylists Carrie Wright, Candace Savonen Package Developers (ottrpal) John Muschelli, Candace Savonen, Carrie Wright Art and Design Illustrator(s) Created graphics for the course Figure Artist(s) Created figures/plots for course Videographer(s) Filmed videos Videography Editor(s) Edited film Audiographer(s) Recorded audio Audiography Editor(s) Edited audio recordings Funding Funder(s) Institution/individual who funded course including grant number Funding Staff Staff members who help with funding   ## ─ Session info ─────────────────────────────────────────────────────────────── ## setting value ## version R version 4.3.2 (2023-10-31) ## os Ubuntu 22.04.4 LTS ## system x86_64, linux-gnu ## ui X11 ## language (EN) ## collate en_US.UTF-8 ## ctype en_US.UTF-8 ## tz Etc/UTC ## date 2025-09-15 ## pandoc 3.1.1 @ /usr/local/bin/ (via rmarkdown) ## ## ─ Packages ─────────────────────────────────────────────────────────────────── ## package * version date (UTC) lib source ## bookdown 0.43 2025-04-15 [1] CRAN (R 4.3.2) ## bslib 0.6.1 2023-11-28 [1] RSPM (R 4.3.0) ## cachem 1.0.8 2023-05-01 [1] RSPM (R 4.3.0) ## cli 3.6.2 2023-12-11 [1] RSPM (R 4.3.0) ## devtools 2.4.5 2022-10-11 [1] RSPM (R 4.3.0) ## digest 0.6.34 2024-01-11 [1] RSPM (R 4.3.0) ## ellipsis 0.3.2 2021-04-29 [1] RSPM (R 4.3.0) ## evaluate 1.0.4 2025-06-18 [1] CRAN (R 4.3.2) ## fastmap 1.1.1 2023-02-24 [1] RSPM (R 4.3.0) ## fs 1.6.3 2023-07-20 [1] RSPM (R 4.3.0) ## glue 1.7.0 2024-01-09 [1] RSPM (R 4.3.0) ## htmltools 0.5.7 2023-11-03 [1] RSPM (R 4.3.0) ## htmlwidgets 1.6.4 2023-12-06 [1] RSPM (R 4.3.0) ## httpuv 1.6.14 2024-01-26 [1] RSPM (R 4.3.0) ## jquerylib 0.1.4 2021-04-26 [1] RSPM (R 4.3.0) ## jsonlite 1.8.8 2023-12-04 [1] RSPM (R 4.3.0) ## knitr 1.50 2025-03-16 [1] CRAN (R 4.3.2) ## later 1.3.2 2023-12-06 [1] RSPM (R 4.3.0) ## lifecycle 1.0.4 2023-11-07 [1] RSPM (R 4.3.0) ## magrittr 2.0.3 2022-03-30 [1] RSPM (R 4.3.0) ## memoise 2.0.1 2021-11-26 [1] RSPM (R 4.3.0) ## mime 0.12 2021-09-28 [1] RSPM (R 4.3.0) ## miniUI 0.1.1.1 2018-05-18 [1] RSPM (R 4.3.0) ## pkgbuild 1.4.3 2023-12-10 [1] RSPM (R 4.3.0) ## pkgload 1.3.4 2024-01-16 [1] RSPM (R 4.3.0) ## profvis 0.3.8 2023-05-02 [1] RSPM (R 4.3.0) ## promises 1.2.1 2023-08-10 [1] RSPM (R 4.3.0) ## purrr 1.0.2 2023-08-10 [1] RSPM (R 4.3.0) ## R6 2.5.1 2021-08-19 [1] RSPM (R 4.3.0) ## Rcpp 1.0.12 2024-01-09 [1] RSPM (R 4.3.0) ## remotes 2.4.2.1 2023-07-18 [1] RSPM (R 4.3.0) ## rlang 1.1.6 2025-04-11 [1] CRAN (R 4.3.2) ## rmarkdown 2.25 2023-09-18 [1] RSPM (R 4.3.0) ## sass 0.4.8 2023-12-06 [1] RSPM (R 4.3.0) ## sessioninfo 1.2.2 2021-12-06 [1] RSPM (R 4.3.0) ## shiny 1.8.0 2023-11-17 [1] RSPM (R 4.3.0) ## stringi 1.8.3 2023-12-11 [1] RSPM (R 4.3.0) ## stringr 1.5.1 2023-11-14 [1] RSPM (R 4.3.0) ## urlchecker 1.0.1 2021-11-30 [1] RSPM (R 4.3.0) ## usethis 2.2.3 2024-02-19 [1] RSPM (R 4.3.0) ## vctrs 0.6.5 2023-12-01 [1] RSPM (R 4.3.0) ## xfun 0.52 2025-04-02 [1] CRAN (R 4.3.2) ## xtable 1.8-4 2019-04-21 [1] RSPM (R 4.3.0) ## yaml 2.3.10 2024-07-26 [1] CRAN (R 4.3.2) ## ## [1] /usr/local/lib/R/site-library ## [2] /usr/local/lib/R/library ## ## ────────────────────────────────────────────────────────────────────────────── "],["references.html", "Chapter 15 References", " Chapter 15 References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
